{{HowTo}}{{Subversion}}
{{Bouygues}}
[[Category:HowTo|Subversion]]
[[Category:Subversion|Installation]]
[[Category:Bouygues SAS]]
[[Category:Bouygues EZP]]

__TOC__

== Description ==

[http://fsvs.tigris.org/ FSVS] est un système de gestion de révision avec des fonctionnalités de sauvegarde/restauration, utilisable sur une arborescence disque ou un système de fichiers entier, et qui utilise [http://subversion.tigris.org/ Subversion] comme serveur de stockage.

FSVS est une sorte de ''tar'' ou ''rsync'' avec une gestion de versions intégrée. Le nom signifie  “''Fast System VerSioning''”et se prononce ''fisvis''.

=== Utilisation de FSVS ===

Ce document décrit la préparation de l'environnement FSVS. Pour un usage quotidien, reportez vous à la [[FSVS_Configuration_et_Utilisation|documentation d'utilisation]].

== Architecture et composants ==

Le système FSVS installé pour Bouygues Telecom est formé des composants suivants :

* L'outil de versionning FSVS, installlé sur les serveurs à versionner
* Un référentiel de stockage et de versionning unique : Subversion
* Une interface web de consultation du référentiel Subversion : ViewVC
* Un batch nocturne, lancé par ''cron'', qui committe automatiquement dans le référentiel toutes les modifications de la journée

== Installation ==

=== Paquetage de FSVS pour RHEL4 ===

FSVS dépend d'une version de Subversion, ainsi que de librairies annexes, qui ne sont pas disponibles dans RHEL4. Il est donc nécessaire de créer un paquet RPM personnalisé.

Les paquets source et binaire de FSVS pour RHEL4 U4 (et U5) sont disponible sur le référentiel Yum de la plate-forme Bouygues Telecom, FTP Rebond (10.10.0.4), dans le répertoire "<tt>/home/yum/RHEL4/U5/custom</tt>". Par exemple :

 -rw-r--r--  1 root staff 3608447 Nov  7 16:48 fsvs-1.1.17-1eas.i386.rpm
 -rw-r--r--  1 root staff 7933649 Nov  7 16:48 fsvs-1.1.17-1eas.src.rpm

'''Note''' : cette documentation décrit FSVS 1.1.17, il se peut que la version disponible soit plus récente.

Le paquet FSVS Easynet contient 2 fichiers qui ne sont pas dans la distribution classique, il s'agit de la configuration cron et du script cron qui gèrent l'auto-commit :
* /etc/cron.d/fsvs
* /usr/sbin/fsvs-autocommit

Il contient également sa propre copie de librairies installées dans un répertoire dédié pour ne pas polluer le système :
* /opt/fsvs/lib



==== Recompilation du paquet Easynet existant ====

Pour recompiler le paquet existant, il faut utiliser une machine RHEL4 U4 ou U5 avec un environnement de développement installé. Il faut notamment les paquets suivants :

* make
* gcc4 ('''GCC 3.4.6 ne compile pas FSVS correctement''')
* gdbm-devel
* pcre-devel
* ctags

'''Si des librairies de développements Subversion, Apache ou APR sont installées en version RHEL4, il faut les désinstaller''' :

 rpm -e subversion-devel apr-devel apr-util-devel httpd-devel

Installer ensuite le paquet source rpm :

 rpm -Uvh fsvs-1.1.17-1eas.src.rpm

Lancer la compilation :

 cd /usr/src/redhat
 rpmbuild -bb SPECS/fsvs.spec

Le paquet binaire sera dans "<tt>RPSM/i386</tt>".

S'il faut aussi regénérer un nouveau paquet source, remplacer "<tt>-bb</tt>" par "<tt>-ba</tt>".

Installer ensuite les paquets RPM dans le référentiel YUM "custom".

==== Spécificité de la compilation pour l'environnement Easynet / Bouygues Telecom ====

On compile un paquet Subversion localement afin d'avoir les bonnes librairies de dépendance pour FSVS. L'équivalent des lignes suivantes est fait par le fichier SPEC :

 cd subversion-1.5.x
 ./configure --prefix=/opt/fsvs
 make
 make install

Ensuite, FSVS lui-même est compilé de la façon suivante, pour utiliser les librairies installées dans "<tt>/opt/fsvs/lib</tt>" :
 export RPATH=/opt/fsvs/lib
 export CFLAGS="-I/usr/include/pcre"
 ./configure -with-aprinc=/opt/fsvs/include/apr-1 --with-svninc=/opt/fsvs/include --with-aprlib=/opt/fsvs/lib --with-svnlib=/opt/fsvs/lib
 cd src
 make

==== Compilation d'un paquet FSVS différent ====

Pour changer par exemple de version de FSVS, procéder comme ceci :

* Installer la versions Source RPM actuelle, de façon à avoir le fichier "<tt>/usr/src/redhat/SPECS/fsvs.spec</tt>"
* Télécharger la dernière version de FSVS sur le site officile (voir les références)
* Poser le fichier source dans "<tt>/usr/src/redhat/SOURCES</tt>"
* Téléchager les source Subversion ainsi que le fichier contenant les sources des dépendances dans le même répertoire. Pour FSVS 1.1.17, les paquets suivants ont été utilisés :
 wget http://subversion.tigris.org/downloads/subversion-1.5.2.tar.bz2
 wget http://subversion.tigris.org/downloads/subversion-deps-1.5.2.tar.bz2
* Corriger le fichier "<tt>fsvs.spec</tt>", notamment si les numéros de version de FSVS ou Subversion ont changé.
** Mettre à jour le changelog
** Mettre à jour le numéro de révision du paquet
* Recompiler comme précédemment, en utilisant l'option "-ba" de <tt>rpmbuilb''</tt>, pour créer également le nouveau paquet source.

==== Sections importantes de fsvs.spec ====

Voici les parties du fichier "<tt>fsvs.spec</tt>" qui seront le plus souvent modifiées :

 Version:        1.1.17
 Release:        1eas
 ...
 %define svn_version     1.5.2
 %define source1         subversion-%{svn_version}.tar.bz2
 %define source2         subversion-deps-%{svn_version}.tar.bz2
 ...
 changelog
 * Wed Oct 29 2008 Farzad FARID <ffarid@pragmatic-source.com> 1.1.17-1eas
 - Upgrade to 1.1.17
 - Change FSVS's source URL



==== Arborescence du paquet FSVS ====

Le paquet FSVS Easynet utilise l'arborescence suivante :

; /usr/bin/fsvs : Le binaire
; /etc/cron.d/fsvs : Le cron d'auto-commit, spécifique Easynet
; /usr/sbin/fsvs-autocommit : Le script d'auto-commit, spécifique Easynet
; /opt/fsvs/lib : Les librairies dont FSVS dépend et qui ne sont pas disponibles dans RHEL4
; /usr/share/doc, /usr/share/man : Documentation
; /var/spool/fsvs : Spool utilisé par FSVS pour le stockage local de l'état des arborescences

=== Installation de Subversion ===

Il y a un seul référentiel Subversion, qui centralise les sauvegardes de tous les serveurs. Pour la plate-forme Bouygues Telecom CMSINT, il s'agit de ''EzpStatLog'' (10.10.2.44).

Vous pouvez consulter aussi la page [[How_To_Subversion_Installation]] pour des informations sur l'installation de Subversion chez Easynet.

Le référentiel sera installé dans le répertoire "<tt>/app/fsvs</tt>".

'''Attention : La version de Subversion fournie sur RHEL4 est trop ancienne (1.1), il faut installer un paquet Subversion 1.4 minimum pour pouvoir utiliser FSVS'''.

* Sur le référentiel Yum (ici 10.10.0.4), dans la section "custom", installer une version récente de Subversion, compilée pour RHEL4. Par exemple celle fournie par Dag Wieers (http://dag.wieers.com/rpm/packages/subversion/) :
** Ajout de http://dag.wieers.com/rpm/packages/subversion/subversion-1.4.6-0.1.el4.rf.i386.rpm et http://dag.wieers.com/rpm/packages/subversion/subversion-devel-1.4.6-0.1.el4.rf.i386.rpm dans le référentiel "RHEL4 U5 custom" de 10.10.0.4
* Si nécessaire, modifier "<tt>/etc/yum.conf</tt>" sur le futur serveur Subversion pour y ajouter la section suivante :
 [custom]
 name=repository custom Easynet
 baseurl=http://10.10.0.4:10002/RHEL4/U5/custom
* Installer le paquet :
 yum install subversion
* Créer et configurer le référentiel Subversion :
 svnadmin create --fs-type fsfs /app/fsvs
 chgrp -R apache /app/fsvs
 chmod -R g+rXs /app/fsvs

== Configuration du serveur FSVS / Subversion / ViewVC ==

=== Configuration du service réseau Subversion ===

Nous utilisons '''svnserve''', qui est moins puissant que '''mod_dav_svn''', le serveur WebDAV de Subversion, mais qui a les avantages suivants :
* Plus simple à configurer
* mod_dav_svn doit être en version 1.4, et nécessite une version de Apache qui n'est pas disponible dans RHEL4.

==== Fichier /app/fsvs/config/svnserve.conf ====

Mettre les lignes suivantes dans ce fichier :

 [general] 
 anon-access = none 
 auth-access = write 
 password-db = passwd 
 realm = Referentiel de configuration Bouygues Telecom

==== Fichier /app/fsvs/config/passwd ====

Mettre les couples login / mot de passe dans ce fichier, en utilisant la convention Easynet : ''prénom.nom''. Le login ''easynet'' est utilisé par le script d'auto-commit.

 # Mots de passe d'acces a subversion 
 [users] 
 easynet = xxxxxx
 gilles.leprince = xxxx
 ....

==== Démarrage de svnserve ====

Svnserver est lancé par ''xinetd''. Mettre les lignes suivantes dans le fichier "<tt>/etc/xinetd.d/svnserve</tt>" :

 # description: Lancement du serveur svnserve pour Subversion/FSVS 
 # avec contrôle d'accès 
 service svn 
 { 
   disable = no 
   socket_type = stream 
   wait = no 
   user = root 
   group = apache 
   server = /usr/bin/svnserve 
   server_args = --inetd --root=/app/fsvs 
   log_on_failure += USERID 
   only_from = 10.10.0.0/16 
 }

Puis recharger la configuration :

 /etc/init.d/xinetd reload

=== Installation et configuration de ViewVC ===

Voici la procédure d'installatin de ViewVC sur le serveur EZPStatLog.

ViewVC est disponible sur le site http://viewvc.tigris.org. C'est la version '''1.0.7''' qui a été utilisée pour l'installation initiale. ViewVC dépend de Subversion 1.2 au minimum, comme vu précédemment nous utilisons la version 1.4 de Dag Wieers, il n'y a donc pas de problème à ce niveau.

* Il faut d'abord installer « enscript » qui est une dépendance de ViewVC :

 yum install enscript

* Ensuite on décompacte les sources de ViewVC dans « <tt>/usr/src</tt> »
* Depuis le répertoire source, lancer la commande « <tt>./viewvc-install</tt> » et répondre aux questions
** ''Installation path'' : <tt>/app/viewvc-1.0.7</tt>
** ''DESTDIT'' : Laisser ce champ vide
* On configure ensuite le modèle graphique du site (''template'').

<pre>
cd /app/viewvc-1.0.7
cp -a templates templates-easynet
</pre>

Modifier <tt>templates-easynet/include/header.ezt</tt> et <tt>templates-easynet/docroot/styles.css</tt>.

<pre>
diff -urN templates/docroot/styles.css templates-easynet/docroot/styles.css
--- templates/docroot/styles.css        2008-10-21 16:45:59.000000000 +0200
+++ templates-easynet/docroot/styles.css        2008-11-17 11:55:01.000000000 +0100
@@ -6,8 +6,12 @@                                                                   
 html, body {                                                                      
   color: #000000;                                                                 
   background-color: #ffffff;                                                      
+  font-family: arial,helvetica,sans-serif;                                        
+  font-size: 12px;                                                                
 }                                                                                 
                                                                                   
+a         { text-decoration:none;}                                                
+a:hover   { text-decoration:underline;}                                           
 a:link    { color: #0000ff; }                                                     
 a:visited { color: #880088; }                                                     
 a:active  { color: #0000ff; }                                                     
@@ -24,11 +28,22 @@
 tr, td, th { vertical-align: top; }
 form { margin: 0; }

+h1{
+  font-size: 24px;
+  text-align: center;
+  color: #000066
+}
+
 /** Navigation Headers ***/
 .vc_navheader {
   background-color: #cccccc;
 }

+.vc_title {
+  background-color: #87CEEB;
+  padding: 2px;
+}
+

 /*** Table Headers ***/
 .vc_header {
diff -urN templates/include/header.ezt templates-easynet/include/header.ezt
--- templates/include/header.ezt        2008-10-21 16:45:59.000000000 +0200
+++ templates-easynet/include/header.ezt        2008-11-17 11:51:55.000000000 +0100
@@ -9,6 +9,10 @@
   [if-any rss_href]<link rel="alternate" type="application/rss+xml" title="RSS [[][rootname]][where]" href="[rss_href]" />[end]
 </head>
 <body>
+<div class="vc_title">
+  <h1>Référentiel Bouygues Telecom CMSINT</h1>
+  <p>Consultez la <a href="/viewvc/cmsint/LISEZMOI?view=markup">documentation FSVS</a> pour plus d'information sur l'utilisation de ce référentiel.</p>
+</div>
 <div class="vc_navheader">
 [if-any roots]
   <form method="get" action="[change_root_action]">
</pre>

* Editer ensuite le fichier <tt>/app/viewvc-1.0.7/viewvc.conf</tt> pour faire des modifications. Commenter d'abord  <tt>cvs_roots</tt> puis modifier les lignes suivantes :

<pre>
svn_roots = svn: /app/fsvs 
default_root = svn 
mime_types_file = /etc/mime.types 
address = <a href="mailto:bouygues-tech@fr.easynet.net">bouygues-tech@fr.easynet.net</a> 
languages = fr, en-us 
allow_tar = 1 
use_localtime = 1 
use_enscript = 1 
template_dir = templates-easynet 
</pre>

* Editer le fichier <tt>/etc/httpd/conf/httpd.conf</tt> :

<pre>
# Configuration de ViewCV (navigateur Subversion, pour FSVS) 
ScriptAlias /viewvc /app/viewvc-1.0.7/bin/cgi/viewvc.cgi 
ScriptAlias /query /app/viewvc-1.0.7/bin/cgi/query.cgi 

<Location /viewvc/system> 
Order deny,allow 
Deny from all 
Allow from 10.0.0.0/16 

AuthUserFile /etc/httpd/conf/cmsint_viewvc.passwd 
AuthType Basic 
AuthName "Acces au referentiel CMSINT" 

Require user easynet 
</Location> 

<Location /viewvc/cmsint> 
Order deny,allow 
Allow from all 

AuthUserFile /etc/httpd/conf/cmsint_viewvc.passwd 
AuthType Basic 
AuthName "Acces au referentiel CMSINT" 
Require user easynet bouygtel 
</Location>
</pre>

* Créer un fichier de mots de passe pour protéger le site, avec les commandes suivantes :

<pre>
cd /etc/httpd/conf
htpasswd -c -m cmsint_viewvc.passwd easynet
htpasswd -m cmsint_viewvc.passwd bouygtel
</pre>

* Redémarrer Apache, ViewVC est maintenant prêt à l'emploi.

== Configuration de FSVS sur une machine cliente ==

=== Installation des paquets ===

Pour la plate-forme CMSINT de Bouygues Telecom, le paquet <tt>fsvs</tt> est disponible dans le référentiel ''yum'' « RHEL4 U5 custom ».

Après s'être assuré que « <tt>/etc/yum.conf</tt> » contient les lignes :
 [custom]
 name=repository custom Easynet
 baseurl=http://10.10.0.4:10002/RHEL4/U5/custom

Lancer la commande :
 yum install subversion fsvs

=== Configuration de l'auto-commit ===

Le script "<tt>fsvs-autocommit</tt>" écrit un message d'info ou d'erreur en '''syslog''' lors de son exécution.

Le script est lancé par '''cron''', à 6h13 du matin. Ceci est paramétrable dans "<tt>/etc/cron.d/fsvs</tt>".

=== Configuration syslog ===

Pour que les logs de l'auto-commit soient faciles à exploiter, tous les serveurs doivent rediriger ''syslog'' vers un serveur PHP Syslog NG central.

La configuration du client syslog et du serveur syslog-ng centralisateur n'est pas décrite dans ce document.

=== Affichage d'un message d'avertissement pour les admins ===

Modifier le fichier « <tt>/etc/motd</tt> » pour y ajouter les lignes suivantes :

 ----------------------------------------------------------------------------- 
 ATTENTION : Les repertoires suivants sont sous le controle du 
 systeme de gestion de configuration FSVS : 
 /etc 
 
 Si vous faites des changements sur ces repertoires, pensez a commiter les 
 changements dans le referentiel avec la commande : 
 fsvs commit -m "Explications..." fichier [fichier..] 
 Tapez "man fsvs" pour une aide en ligne ou consultez la doc FSVS sur le Wiki 
 -----------------------------------------------------------------------------

=== Paramétrage de FSVS ===

==== Configuration initiale de FSVS ====

'''Cette étape n'est à faire qu'une seule fois par serveur, même s'il y a plusieurs répertoires versionnés dessus'''.

Maintenant il faut créer le fichier de configuration de FSVS, dans « <tt>/etc/fsvs/config</tt> » :

 # Configuration par défaut de FSVS
 author=easynet
 # Le champ "password" doit rester en commentaire, il est officieux
 # password=XXXXXX
 commit_to=local
 empty_commit=no
 stat_color=yes
 # "fsvs status" doit ignorer les différences de date
 filter=none,text,new,deleted,group,owner
 config_dir=/root/.subversion

{{:Bouygues/Modèle Cadre |
titre = [[Image:Nuvola_apps_khelpcenter.png|none|22px|Attention]] Pensez à mettre le bon mot de passe ! |
couleur = #FF8000 |
couleurTitre = #FF0000 |
contenu = 
Le pseudo-champ ''password'' en commentaire est très important. Renseignez le correctement.
}}


Puis il faut protéger ce fichier en lecture, et créer un lien symbolique qui est un palliatif pour ''config_dir'' qui ne marche pas dans certaines version de FSVS :

 chmod 700 /etc/fsvs/config
 cd /etc/fsvs
 ln -s /root/.subversion auth

Le fichier de configuration est bien décrit dans la documentation (man pages), en voici une brève explication.

; author : Compte Subversion utilisé pour les ''commits'' automatique (voir [[FSVS_Installation]])
; password : Mot de passe du compte Subversion. Il est en commentaire car ce n'est pas une option FSVS officielle, mais il est utilisé par le script d'auto-commit, « <tt>/usr/sbin/fsvs-autocommit</tt> ».
; commit_to : Référentiel par défaut à utiliser en cas de multi-référentiels. '''Attention''' : Ne pas oublier de mettre cette valeur à '''base''' dans le cas où le référentiel est commun à plusieurs machines.
; empty_commit : Interdit les ''commits'' vides.
; stat_color : Ajoute des couleurs à l'affichage de résultats.
; filter : Ne tient pas compte des différences de date des fichiers entre le serveur et le référentiel. Ceci permet de réduire le risque de ''faux positif'' lorsqu'on regarde si le référentiel est à jour.
; config_dir : Chemin du répertoire de configuration du client SVN, indispensable pour l'authentification.

==== Versionning d'un nouveau répertoire ====

Dans cet exemple, nous allons créer un référentiel pour le répertoire  « <tt>/etc</tt> » du serveur '''backezp-p1'''.

Il faut d'abord instancier le référentiel. Dans une étape précédent, nous avons déjà créé le répertoire Subversion qui correspond à cette machine de production, pour son "/etc" : '''svn://10.10.2.44/system/prod/machines/backezp-p1/trunk/etc'''. Nous avons aussi besoin d'un compte Subversion, reportez-vous au document [[FSVS_Installation]] pour la création des comptes Subversion pour les administrateurs.

Vérifions d'abord que nous voyons le référentiel FSVS/Subversion :

 [root@backezp-p1 ~]# svn ls --username=farzad.farid -v svn://10.10.2.44/system/prod/machines/backezp-p1/trunk/etc
 Authentication realm: <svn://10.10.2.44:3690> Referentiel de configuration Bouygues Telecom
 Password for 'farzad.farid':
 [root@backezp-p1 ~]#

Le référentiel étant vide, rien ne s'affiche, mais il n'y a pas non plus d'erreur.

'''En cas d'erreur, il faut peut-être remplacer "10.10.2.44" par "10.10.3.24".'''

==== Paramètres d'un référentiel ====

Maintenant, nous déclarons le référentiel que nous associons à "/etc". Chaque référentiel a 3 caractéristiques :

; Une URL : Ici c'est <tt>svn://10.10.2.44/system/prod/machines/backezp-p1/trunk/etc</tt>
; Un nom : Nous utilisons « '''base''' » et « '''local''' »
; Une priorité : c'est un nombre. Plus il est petit, plus le référentiel a une priorité importante.

==== Cas d'utilisation des référentiels multiples ====

Le nom et la priorité sont utilisés quand nous associons ''plusieurs référentiels'' à un même répertoire. La configuration multi-référentiels est utile quand nous avons un groupe de machines quasi identiques, dont le répertoire à versionner partage la quasi totalité des fichiers, sauf quelques uns qui sont spécifiques à chaque machine. Dans ce cas nous créons '''deux''' référentiels :

* Un référentiel '''local''' de priorité '''100''' : Il contient tous les fichiers locaux à la machine
* Un référentiel '''base''' de priorité '''200''' : Il contient tous les fichiers communs au groupe de machines

==== Initialisation du référentiel ====

Maintenant, lançons la commande qui associe le référentiel au répertoire « <tt>/etc</tt> » :

'''1) Cas du référentiel uniquement local'''

 cd /etc
 fsvs urls name:local,prio:100,svn://10.10.2.44/system/prod/machines/backezp-p1/trunk/etc


'''2) Cas du référentiel unique, mais commun à plusieurs serveurs'''

 cd /app/ezpublish
 fsvs urls name:base,prio:200,svn://10.10.2.44/cmsint/prod/back/trunk/ezpublish


'''3) Cas d'utilisation de plusieurs référentiels'''

<pre>
cd /etc
fsvs urls N:base,P:200,svn://10.10.3.24/system/preprod/front/trunk/etc
fsvs urls name:local,prio:100,svn://10.10.3.24/system/preprod/machines/frontezp-pp1/trunk/etc
</pre>

'''Note''' : Mettez à jour « <tt>/etc/motd</tt> » pour qu'il soit en conformité avec la liste
des répertoires effectivement versionnés.

=== Paramétrage des fichiers/répertoires à ignorer ===

Avant de faire un premier ''commit'', il faut d'abord définir la liste des fichiers et répertoires qu'il faudra toujours ignorer. Il s'agira par exemple de :
* fichiers temporaires (*~, *.swp, *.old, etc.)
* fichiers confidentiels
* fichiers générés automatiquement par le système (/etc/mtab)
* fichiers ou répertoires liés à NFS (.snapshot, .nfs*)

Pour la syntaxe de l'''ignore list'', veuillez consulter le document '''/usr/share/doc/fsvs-x.y.z/IGNORING'''.

Il faut d'abord lister l'ensemble des éléments que FSVS voit, et souhaite committer :

 fsvs status | less

L'affichage ressemble à ceci :

<pre>
N...       dir  acpi
N...       dir  acpi/actions
N...        90  acpi/events/sample.conf
N...       dir  acpi/events
N...        48  adjtime
N...      1574  aliases
N...     12288  aliases.db
[...]
N...       dir  yum
N...        19  yum/yum-daily.yum
N...       671  yum.conf
N...       dir  yum.repos.d
.mC.       dir  .
</pre>

En regardant cette liste, il faut maintenant repérer les éléments à exclure.

==== Exclusions standard pour « /etc/ » ====

Pour les répertoires « <tt>/etc</tt> » des serveurs RHEL4 de CMSINT, la liste suivante convient :

* ./.pwd.lock
* ./mtab
* './**~'
* DEVICE:0
* './**.swp'
* ./prelink.cache
* ./ld.so.cache
* './**.rpmsave'
* './**.rpmnew'
* ./passwd-
* ./shadow-
* ./group-
* ./gshadow-
* "./**.orig"
* "./**.old"
* "./**.bak"
* "./**.OLD"
* "./**.tar.gz"
* "./**.rpm"

==== Exclusions standard pour « /app/ezpublish » ====

Pour le répertoire « <tt>/app/ezpublish</tt> », la liste suivante convient :

* './**~'
* './**.swp'
* './**.rpmsave'
* './**.rpmnew'
* "./**.orig"
* "./**.old"
* "./**.bak"
* "./**.OLD"
* "./**.diff"
* "./**.patch"
* "./**.tar.gz"
* "./save/**"
* "./extension/.snapshot"
* "./settings/.snapshot"
* "./var/**"
* "./**.nfs*"
* "./**.rpm"

<br />

{{:Bouygues/Modèle Cadre |
titre = [[Image:Nuvola_apps_khelpcenter.png|none|22px|Attention]] Attention au points suivant lors de l'utilisation de la commande ''ignore'' |
couleur = #FF8000 |
couleurTitre = #FF0000 |
contenu = 
* Il est possible qu'un serveur particulier, ou groupe de serveurs, nécessite une liste légèrement différente d'exclusions.
* Il faut encadrer de guillemets ou d'apostrophes les exclusions contenant des caractères ''joker''.
* <tt>DEVICE:0</tt> permet d'ignorer tous les fichiers spéciaux (''pipe'', ''socket''..) mais aussi '''les points de montage NFS'''.
}}

==== Commande "fsvs ignore" à exécuter ====

Maintenant, il faut exécuter la commande « <tt>fsvs ignore</tt> » avec les bons paramètres, depuis le répertoire à versionner (ici « '''<tt>/etc</tt>''' ») :

<pre>
cd /etc
fsvs ignore ./.pwd.lock ./mtab './**~' DEVICE:0 './**.swp' ./prelink.cache ./ld.so.cache './**.rpm' './**.rpmsave' './**.rpmnew' ./passwd- ./shadow- ./group- ./gshadow- './**.orig' './**.old' './**.bak' './**.OLD' './**.tar.gz'
</pre>

On peut ensuite vérifier avec « status » qu'il y a moins de fichiers/répertoires listés. Une fois la liste "''ignore''" bien paramétrées, on peut faire un ''commit''.

Pour le répertoire « '''<tt>/app/ezpublish</tt>''' », il faut utiliser la ligne suivante, ''avec éventuellement des adaptation'' :

<pre>
cd /app/ezpublish
fsvs ignore './**~' './**.swp' './**.rpm' './**.rpmsave' './**.rpmnew' './**.orig' './**.old' './**.bak' './**.OLD' './**.diff' './**.patch' './**.tar.gz' './save/**' './extension/.snapshot' './settings/.snapshot' './var/**' './**.nfs*'
</pre>

=== Commit initial ===

Selon que l'on versionne un répertoire dans un référentiel dédié (i.e. chaque machine/répertoire a son propre référentiel FSVS/SVN) ou dans un référentiel partagé (i.e. plusieurs machines utilisent un référentiel commun pour un même répertoire), les commandes à passer seront différentes.

==== Cas du commit simple : un référentiel dédié à une machine ====

Ce cas s'applique aussi pour la '''première machine a être versionné dans un référentiel partagée'''.

On insère dans la base de données Subversion/FSVS la copie actuelle du répertoire à versionner avec la commande suivante :

<pre>
cd /etc
fsvs commit -o author=farzad.farid -m "Premier commit pour backezp-p1:/etc"
</pre>

Cette commande donnera un résultat similaire au suivant :

<pre>
Authentication realm: <svn://10.10.2.44:3690> Referentiel de configuration Bouygues Telecom
Password for 'farzad.farid':
Committing to svn://10.10.2.44/system/prod/machines/backezp-p1/trunk/etc
N...       dir  acpi
N...       dir  acpi/actions
N...       dir  acpi/events
N...        90  acpi/events/sample.conf
N...        48  adjtime
N...      1574  aliases
N...     12288  aliases.db
N...       dir  alternatives
N...        26  alternatives/mta
  [ ... plein de lignes similaires ... ]
N...       518  xinetd.d/time-udp
N...       dir  yum
N...        19  yum/yum-daily.yum
N...       671  yum.conf
N...       dir  yum.repos.d
committed revision      199 on 2008-11-25T17:19:41.748103Z as farzad.farid
</pre>

==== Cas du commit dans un référentiel partagé ====

* Pour la '''première machine''' dont on versionne répertoire, il faut appliquer la procédure simple du cas précédent.
* Pour les '''machines suivantes''', Il faut d'abord ''synchroniser'' le répertoire local avec le réferentiel qui existe déjà, et ensuite seulement faire un ''commit''.

La procédure est la suivante :

# Le répertoire <tt>/app/ezpublish</tt> du serveur de Backoffice CMSINT, '''backezp-p1''', est déjà versionné.
# Nous voulons versionner le serveur numéro 2, '''backezp-p2'''. Il doit partager le référentiel avec le premier serveur.
# On exécute les commandes suivantes :

<pre>
cd /app/ezpublish
fsvs urls name:base,prio:200,svn://10.10.2.44/cmsint/prod/back/trunk/ezpublish
fsvs ignore './**~' './**.swp' './**.rpm' './**.rpmsave' './**.rpmnew' './**.orig' './**.old' './**.bak' './**.OLD' './**.diff' './**.patch' './**.tar.gz' './save/**' './extension' './settings' './extension/**' './settings/**' './var/**' './**.nfs*'
fsvs sync-repos
</pre>

<br />

{{:Bouygues/Modèle Cadre |
titre = [[Image:Nuvola_apps_khelpcenter.png|none|22px|Attention]] Attention aux paramètres de la commande ''ignore'' |
couleur = #FF8000 |
couleurTitre = #FF0000 |
contenu = 
Ici on exclut totalement « <tt>settings</tt> » et « <tt>extension</tt> », car ces deux répertoires sont partagés en NFS, et donc déjà versionnés sur '''backezp-p1'''.
}}


La commande « <tt>sync-repos</tt> » dit à FSVS d'utiliser les informations du référentiel FSVS/SVN existant pour construire la base locale. '''Cette commande ne présente aucun danger car elle ne modifie aucun fichier en local'''.

Il est possible qu'il y ait des différences entre les répertoires des deux serveurs, pour plusieurs raisons :
# Des fichiers temporaires ont été oubliés sur l'un.
# Les mêmes fichiers ont été modifiés différemment sur plusieurs machines, par exemple avec un espace en plus dans une ligne.
# '''Il y a des interaction avec le serveur NFS qui font que FSVS montrent des différences là où il n'y en a pas'''.


Maintenant, en utilisant « <tt>fsvs status</tt> », et en lui passant des options adéquates, on peut vérifier s'il y a des corrections à apporter avant le commit final. Par exemple :

<pre>
[root@backezp-p2 ezpublish]# fsvs status -N
D...      1113  clearlabels.php
N...       630  ezpublish.cron
N...       559  test.php
..C.       dir  .
</pre>

Ici on voit que le référentiel contient un fichier qui n'existe pas encore en local (<tt>clearlabels.php</tt>), et que le répertoire local contient deux fichiers en trop (<tt>ezpublish.cron</tt>, <tt>test.php</tt>).

{{:Bouygues/Modèle Cadre |
titre = Si « fsvs status » plante |
couleur = #FF8000 |
couleurTitre = #FF0000 |
contenu = 
Il est possible que « <tt>fsvs status</tt> » plante, à cause de problème NFS, ou à cause de cas limites pas encore pris en compte dans le code de FSVS. Dans ce cas il faudrait utiliser une variante de la commande :

; fsvs status -N : Version non récursive, comme l'exemple ci-dessus.
; fsvs status mon_répertoire ; Restreint le calcul du status à un répertoire particulier.
}}

Dans l'exemple ci-dessus, nous devons supprimer <tt>ezpublish.cron</tt> et <tt>test.php</tt> :

<pre>
fsvs unversion ezpublish.cron test.php
</pre>

* Dans le cas où il y a des changement à commiter sur '''backezp-p2''', il faut maintenant exécuter la commande suivante :

<pre>
fsvs commit -o author=farzad.farid -m "Premier commit de backezp-p2:/app/ezpublish"
</pre>

* Dans certaines cas, la commande ''update'' peut aussi aider à synchroniser les 2 référentiels :

<pre>
fsvs update
</pre>

Il faut ensuite vérifier l'état avec « <tt>fsvs status -C</tt> », et éventuellement faire le ''commit''.

==== Cas du référentiel contenant des répertoires en NFS et/ou en lecteur seule ====

{{:Bouygues/Modèle Cadre |
titre = [[Image:Nuvola_apps_khelpcenter.png|none|22px|Attention]] Si le répertoire contient des répertoire NFS partagés : |
couleur = #FF8000 |
couleurTitre = #FF0000 |
contenu = 
Dans ce cas de figure, '''il ne faut versionner les sous-répertoires que sur un seul des serveurs, et les ignorer sur les autres'''.

En effet, les modifications sur NFS sont automatiquement répercutées sur tous les serveurs, il est donc inutile (voire dangereux et complexe) de commiter plusieurs fois la même chose.
}}

Par exemple :

* Soient 2 serveurs frontaux EzPublish, '''frontezp-p1''' et '''frontezp-p2'''.
* On veut versionner <tt>/app/ezpublish</tt>
* Le répertoire <tt>/app/ezpublish/settings</tt> est partagé en NFS sur les 2 serveurs
* Le répertoire <tt>/app/ezpublish/extension</tt> est partagé en NFS sur les 2 serveurs

La solution est :

* Sur '''frontezp-p1''':
** On met la liste ''ignore'' normale (celle contenant « <tt>./settings/.snapshot ./extension/.snapshot</tt> »). '''Il ne faut pas exclure « ./settings », « ./extension », ni ajouter « DEVICE:0 » dans la ligne ''ignore'' ;
** On paramètre '''deux''' référentiels comme ci-dessous ;
** On fait le commit initial normalement, comme décrit au [http://10.42.4.43/wiki/FSVS_Configuration_et_Utilisation#Commit_initial chapitre précédent].

<pre>
N:nfs,P:100,svn://10.10.2.44/cmsint/prod/front/trunk/ezpublish-extension-settings
N:base,P:200,svn://10.10.2.44/cmsint/prod/front/trunk/ezpublish
</pre>

* Sur '''frontezp-p2''' :
** On rajoute « <tt>./settings</tt> » et « <tt>./extension</tt> » dans la liste ''ignore''
** On paramètre '''un seul''' référentiel comme ci-dessous,
** On utilise « <tt>fsvs sync-repos</tt> » pour synchroniser le répertoire avec celui-ci de '''frontezp-p1'''.

<pre>
N:base,P:200,svn://10.10.2.44/cmsint/prod/front/trunk/ezpublish
</pre>


Ainsi, les répertoire « <tt>./settings</tt> » et « <tt>./extension</tt> » seront versionnés une fois, sur le serveur '''frontezp-p1''', mais resteront invisibles pour FSVS sur le serveur '''frontezp-p2'''.

===== Exemple complet de versionning partagé de /app/ezpublish sur frontezp-p3 =====

'''Pré-requis''' : frontezp-p1 et frontezp-p2 ont déjà été versionnés comme décrit ci-dessus.

<pre>
fsvs urls N:base,P:200,svn://10.10.2.44/cmsint/prod/front/trunk/ezpublish
fsvs ignore './**~' './**.swp' './**.rpm' './**.rpmsave' './**.rpmnew' './**.orig' './**.old' './**.bak' './**.OLD' './**.diff' './**.patch' './**.tar.gz' './save/**' './extension' './settings' './var/**' './**.nfs*'
fsvs sync-repos
</pre>

Ensuite, on contrôle avec « <tt>fsvs status</tt> » s'il y a des modifications locales à apporter. Eventuellement on fait un commit ensuite.

<pre>
[root@frontezp-p3 ezpublish]# fsvs status
</pre>
<pre>
D...      6689  kickstart.ini
.mC.      1154  settings.local/override/site.ini.append.php
N...      2847  test.php
..C.       dir  .
</pre>
<pre>
[root@frontezp-p3 ezpublish]# fsvs diff settings.local/override/site.ini.append.php
</pre>
<pre>
diff -u settings.local/override/site.ini.append.php.r236 settings.local/override/site.ini.append.php.local
--- settings.local/override/site.ini.append.php         Rev. 236        (Mon Feb 18 10:49:37 2008)
+++ settings.local/override/site.ini.append.php         Local version   (Mon Feb 18 10:51:51 2008)
@@ -1,6 +1,5 @@
 <?php /* #?ini charset="utf-8"?

-
 [ExtensionSettings]
 ActiveExtensions[]
 ActiveExtensions[]=ezwebin
</pre>
<pre>
[root@frontezp-p3 ezpublish]# fsvs revert kickstart.ini settings.local/override/site.ini.append.php test.php
</pre>
<pre>
Reverting to revision 236:
D...      6689  kickstart.ini
.mC.      1155  settings.local/override/site.ini.append.php
N...         0  test.php
..C.       dir  /app/ezpublish
</pre>
<pre>
[root@frontezp-p3 ezpublish]# rm -f test.php
[root@frontezp-p3 ezpublish]# fsvs status
</pre>

'''Le répertoire « <tt>/app/ezpublish</tt> » de frontezp-p3 est maintenant synchrone avec frontezp-p1/p2 sans que l'on ait eu besoin de faire le moindre ''commit''.'''

== Divers ==

=== Comment mettre à jour la doc ViewVC ===

La [http://10.10.2.44/viewvc/cmsint/LISEZMOI?view=markup documentation de ViewVC] est stockée dans le référentiel lui-même, à la racine de « <tt>/cmsint></tt> ». Pour modifier cette documentation, il faut utiliser l'outil ''svn'' et appliquer la procédure suivante:

* Se connecter sur EzpStatLog
* Aller dans un répertoire temporaire et faire une extraction ''non récursive'' du répertoire <tt>/cmsint</tt> du référentiel :

<HighLightSyntax language=bash>
cd /tmp
svn checkout --non-recursive svn://10.10.2.44/cmsint viewvc-doc
</HighlightSyntax>

* Editer le fichier <tt>LISEZMOI</tt>

<HighLightSyntax language=bash>
cd viewvc-doc
vim LISEZMOI
</HighlightSyntax>

* Commiter le fichier modifié :

<HighLightSyntax language=bash>
svn commit --username=farzad.farid -m "Ajout de XXXXX dans la doc ViewVC" LISEZMOI
cd ..
rm -rf /tmp/viewvc-doc
</HighlightSyntax>

== Références ==

* FSVS : http://fsvs.tigris.org/
** Site de documentation : http://doc.fsvs-software.org/
* Subversion : http://subversion.tigris.org/
* ViewVC : http://viewvc.tigris.org/

